{"mappings":"AAAA,sBAAsB;AACtB,MAAM,QAAQ,SAAS,eAAe;AACtC,MAAM,OAAO,SAAS,eAAe;AACrC,MAAM,WAAW,SAAS,eAAe;AACzC,MAAM,UAAU,SAAS,eAAe;AACxC,MAAM,UAAU,SAAS,eAAe;AACxC,MAAM,UAAU,SAAS,eAAe;AACxC,MAAM,UAAU,SAAS,eAAe;AACxC,MAAM,YAAY,SAAS,eAAe;AAC1C,MAAM,WAAW,SAAS,eAAe;AACzC,MAAM,WAAW,SAAS,eAAe;AAEzC,uBAAuB;AACvB,IAAI,YAAY;IACd;QACE,UAAU;QACV,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;IACX;IACA;QACE,UAAU;QACV,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;IACX;IACA;QACE,UAAU;QACV,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;IACX;IACA;QACE,UAAU;QACV,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;IACX;IACA;QACE,UAAU;QACV,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;IACX;IACA;QACE,UAAU;QACV,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;IACX;IACA;QACE,UAAU;QACV,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;IACX;CACD;AAED,wBAAwB;AAExB,MAAM,eAAe,UAAU,SAAS;AACxC,IAAI,kBAAkB;AACtB,IAAI,QAAQ;AACZ,MAAM,eAAe,IAAI,MAAM;AAC/B,MAAM,aAAa,KAAK,QAAQ;AAChC,MAAM,YAAY,aAAa;AAC/B,IAAI;AACJ,IAAI,QAAQ;AAEZ,oBAAoB;AACpB,SAAS;IACP,IAAI,IAAI,SAAS,CAAC,gBAAgB;IAElC,SAAS,YAAY,QAAQ,EAAE,WAAW;IAC1C,QAAQ,YAAY,EAAE;IACtB,QAAQ,YAAY,EAAE;IACtB,QAAQ,YAAY,EAAE;AACxB;AAEA,MAAM,iBAAiB,SAAS;AAEhC,aAAa;AACb,SAAS;IACP,MAAM,MAAM,UAAU;IACtB;IACA,KAAK,MAAM,UAAU;IACrB;IACA;IACA,QAAQ,YAAY,eAAe,OAAO,cAAc;AAC1D;AAEA,kBAAkB;AAClB,SAAS;IACP,IAAK,IAAI,SAAS,GAAG,UAAU,cAAc,SAC3C,SAAS,aAAa,0BAA0B,SAAS;AAE7D;AAEA,iBAAiB;AAEjB,SAAS;IACP,IAAI,SAAS,cAAc;QACzB,QAAQ,YAAY;QACpB,UAAU,MAAM,QAAQ,QAAQ,YAAY;QAC5C;IACF,OAAO;QACL,QAAQ;QACR,+BAA+B;QAC/B;QACA,IAAI,kBAAkB,cAAc;YAClC;YACA;QACF,OAAO;YACL,kCAAkC;YAClC,cAAc;YACd;QACF;IACF;AACF;AAEA,aAAa;AAEb,SAAS,YAAY,MAAM;IACzB,IAAI,UAAU,SAAS,CAAC,gBAAgB,CAAC,SAAS;QAChD,oBAAoB;QACpB;QACA,iCAAiC;QACjC;IACF,OACE,kBAAkB;IAClB,+BAA+B;IAC/B;IAEF,QAAQ;IACR,IAAI,kBAAkB,cAAc;QAClC;QACA;IACF,OAAO;QACL,kCAAkC;QAClC,cAAc;QACd;IACF;AACF;AAEA,oBAAoB;AACpB,SAAS;IACP,SAAS,eAAe,iBAAiB,MAAM,kBAAkB;AACnE;AAEA,kBAAkB;AAClB,SAAS;IACP,SAAS,eAAe,iBAAiB,MAAM,kBAAkB;AACnE;AAEA,eAAe;AACf,SAAS;IACP,SAAS,MAAM,UAAU;IAEzB,gEAAgE;IAChE,MAAM,eAAe,KAAK,MAAM,AAAC,MAAM,QAAS,UAAU;IAE1D,6CAA6C;IAC7C,IAAI,MACF,gBAAgB,KACZ,cACA,gBAAgB,KAChB,cACA,gBAAgB,KAChB,cACA,gBAAgB,KAChB,cACA;IAEN,SAAS,aAAa,QAAQ,eAAe;AAC/C","sources":["src/quiz.js"],"sourcesContent":["// select all elements\r\nconst start = document.getElementById(\"start\");\r\nconst quiz = document.getElementById(\"quiz\");\r\nconst question = document.getElementById(\"question\");\r\nconst choiceA = document.getElementById(\"A\");\r\nconst choiceB = document.getElementById(\"B\");\r\nconst choiceC = document.getElementById(\"C\");\r\nconst counter = document.getElementById(\"counter\");\r\nconst timeGauge = document.getElementById(\"timeGauge\");\r\nconst progress = document.getElementById(\"progress\");\r\nconst scoreDiv = document.getElementById(\"scoreContainer\");\r\n\r\n// create our questions\r\nlet questions = [\r\n  {\r\n    question: \"What is digital forensics?\",\r\n    choiceA: \"A field using scientific procedures to solve crimes\",\r\n    choiceB: \"The study of computers and computational systems\",\r\n    choiceC: \"A branch of forensic science exploring material in devices\",\r\n    correct: \"C\",\r\n  },\r\n  {\r\n    question: \"What is NOT a way to stay cyber safe?\",\r\n    choiceA: \"Not updating your software\",\r\n    choiceB: \"Being weary of links\",\r\n    choiceC: \"Have strong passwords\",\r\n    correct: \"A\",\r\n  },\r\n  {\r\n    question: \"Who are most susceptible to cyber crimes?\",\r\n    choiceA: \"Big businesses\",\r\n    choiceB: \"Elderly\",\r\n    choiceC: \"Small businesses\",\r\n    correct: \"C\",\r\n  },\r\n  {\r\n    question: \"How was the BTK Killer caught?\",\r\n    choiceA: \"IP Address leak\",\r\n    choiceB: \"His DNA was found at a scene\",\r\n    choiceC: \"Word Doc Metadata\",\r\n    correct: \"C\",\r\n  },\r\n  {\r\n    question: \"Why is chain of custody important?\",\r\n    choiceA: \"So you can accurately trace things\",\r\n    choiceB: \"To hold things together\",\r\n    choiceC: \"To prevent criminals from escaping\",\r\n    correct: \"A\",\r\n  },\r\n  {\r\n    question: \"Is digital evidence alone enough to incriminate a person?\",\r\n    choiceA: \"Yes\",\r\n    choiceB: \"No\",\r\n    choiceC: \"IDK\",\r\n    correct: \"B\",\r\n  },\r\n  {\r\n    question: \"What is digital footprint?\",\r\n    choiceA: \"A change you made to the technological world\",\r\n    choiceB: \"Data left behind when users have been online\",\r\n    choiceC: \"Your online footprint\",\r\n    correct: \"B\",\r\n  },\r\n];\r\n\r\n// create some variables\r\n\r\nconst lastQuestion = questions.length - 1;\r\nlet runningQuestion = 0;\r\nlet count = 0;\r\nconst questionTime = 10; // 10s\r\nconst gaugeWidth = 150; // 150px\r\nconst gaugeUnit = gaugeWidth / questionTime;\r\nlet TIMER;\r\nlet score = 0;\r\n\r\n// render a question\r\nfunction renderQuestion() {\r\n  let q = questions[runningQuestion];\r\n\r\n  question.innerHTML = \"<p>\" + q.question + \"</p>\";\r\n  choiceA.innerHTML = q.choiceA;\r\n  choiceB.innerHTML = q.choiceB;\r\n  choiceC.innerHTML = q.choiceC;\r\n}\r\n\r\nstart.addEventListener(\"click\", startQuiz);\r\n\r\n// start quiz\r\nfunction startQuiz() {\r\n  start.style.display = \"none\";\r\n  renderQuestion();\r\n  quiz.style.display = \"block\";\r\n  renderProgress();\r\n  renderCounter();\r\n  TIMER = setInterval(renderCounter, 1000); // 1000ms = 1s\r\n}\r\n\r\n// render progress\r\nfunction renderProgress() {\r\n  for (let qIndex = 0; qIndex <= lastQuestion; qIndex++) {\r\n    progress.innerHTML += \"<div class='prog' id=\" + qIndex + \"></div>\";\r\n  }\r\n}\r\n\r\n// counter render\r\n\r\nfunction renderCounter() {\r\n  if (count <= questionTime) {\r\n    counter.innerHTML = count;\r\n    timeGauge.style.width = count * gaugeUnit + \"px\";\r\n    count++;\r\n  } else {\r\n    count = 0;\r\n    // change progress color to red\r\n    answerIsWrong();\r\n    if (runningQuestion < lastQuestion) {\r\n      runningQuestion++;\r\n      renderQuestion();\r\n    } else {\r\n      // end the quiz and show the score\r\n      clearInterval(TIMER);\r\n      scoreRender();\r\n    }\r\n  }\r\n}\r\n\r\n// checkAnwer\r\n\r\nfunction checkAnswer(answer) {\r\n  if (answer == questions[runningQuestion].correct) {\r\n    // answer is correct\r\n    score++;\r\n    // change progress color to green\r\n    answerIsCorrect();\r\n  } else {\r\n    // answer is wrong\r\n    // change progress color to red\r\n    answerIsWrong();\r\n  }\r\n  count = 0;\r\n  if (runningQuestion < lastQuestion) {\r\n    runningQuestion++;\r\n    renderQuestion();\r\n  } else {\r\n    // end the quiz and show the score\r\n    clearInterval(TIMER);\r\n    scoreRender();\r\n  }\r\n}\r\n\r\n// answer is correct\r\nfunction answerIsCorrect() {\r\n  document.getElementById(runningQuestion).style.backgroundColor = \"#0f0\";\r\n}\r\n\r\n// answer is Wrong\r\nfunction answerIsWrong() {\r\n  document.getElementById(runningQuestion).style.backgroundColor = \"#f00\";\r\n}\r\n\r\n// score render\r\nfunction scoreRender() {\r\n  scoreDiv.style.display = \"block\";\r\n\r\n  // calculate the amount of question percent answered by the user\r\n  const scorePerCent = Math.round((100 * score) / questions.length);\r\n\r\n  // choose the image based on the scorePerCent\r\n  let img =\r\n    scorePerCent >= 80\r\n      ? \"img/5.png\"\r\n      : scorePerCent >= 60\r\n      ? \"img/4.png\"\r\n      : scorePerCent >= 40\r\n      ? \"img/3.png\"\r\n      : scorePerCent >= 20\r\n      ? \"img/2.png\"\r\n      : \"img/1.png\";\r\n\r\n  scoreDiv.innerHTML += \"<p>\" + scorePerCent + \"%</p>\";\r\n}\r\n"],"names":[],"version":3,"file":"index.3926caeb.js.map","sourceRoot":"/__parcel_source_root/"}